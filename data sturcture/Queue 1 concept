What is Queue?

Queue is a linear data structure like stack, but in Queue elements is inserted from one end and removed from another end.
Queue will be open at both the ends that's why insertion and removing of elements is done at different ends. The end where
elements are added is called as back/tale/rear of the queue and the end where the elements re removed is called head/Front
of the queue.

And the queue follows 'FIFO' and 'LILO' methodology.
FIFO: First in first out.
LILO: Last in last out.

ENQUEUE:  the process of adding the element to the queue is called enqueue.
DEQUEUE:  the process of removing the elements from the queue is called dequeue.

BASIC OPERATIONS PERFORMED ON QUEUE:

enqueue(int data): Inserts an element at the end of the queue i.e. at the rear end.
dequeue(): This operation removes and returns an element that is at the front end of the queue.

Auxiliary Operations on Queue:

int front(): This operation returns the element at the front end without removing it.
int rear(): This operation returns the element at the rear end without removing it.
int isEmpty(): This operation indicates whether the queue is empty or not.
int size(): This operation returns the size of the queue i.e. the total number of elements it contains.

Complexity Analysis:

Time Complexity:
Operations              Complexity
Enqueue(insertion)           O(1)
Deque(deletion)            O(1)
Front(Get front)           O(1)
Rear(Get Rear)             O(1)

Queue in Python can be implemented using the following ways:
1. list
2. collection module (deque class)
3. queue module (Queue class)